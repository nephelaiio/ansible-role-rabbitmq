---
- name: Include variable overrides
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
        - "vars/default.yml"

- name: Install packages
  ansible.builtin.package:
    name: "{{ rabbitmq_packages | default(rabbitmq_package_default) }}"
    state: "{{ rabbitmq_package_state }}"
  notify:
    - vhost_remove
    - guest_remove

- name: Manage services
  ansible.builtin.service:
    name: "{{ rabbitmq_service_name | default(rabbitmq_service_default) }}"
    state: "{{ rabbitmq_service_status }}"
    enabled: "{{ rabbitmq_service_enabled }}"

- name: Enable rabbitmq management
  ansible.builtin.command: rabbitmq-plugins enable rabbitmq_management
  changed_when: false

- name: Query vhosts
  ansible.builtin.command: "rabbitmqctl list_vhosts"
  changed_when: false
  register: rabbitmq_vhosts

- name: Create vhost
  ansible.builtin.command: "rabbitmqctl add_vhost {{ rabbitmq_vhost }}"
  vars:
    _defined: "{{ rabbitmq_vhost is defined }}"
    _absent: "{{ rabbitmq_vhost not in rabbitmq_vhosts.stdout_lines }}"
  when: _defined and _absent
  changed_when: false

- name: Query users
  ansible.builtin.command: rabbitmqctl list_users
  changed_when: false
  register: rabbitmq_users

- name: Create user
  ansible.builtin.command: >
    rabbitmqctl add_user
      {{ rabbitmq_user_name }}
      {{ rabbitmq_user_pass }}
  vars:
    _defined: "{{ rabbitmq_user_name is defined }}"
    _absent: "{{ rabbitmq_user_name not in rabbitmq_users.stdout }}"
  when: _defined and _absent
  changed_when: false

- name: Set user pass
  ansible.builtin.command: >
    rabbitmqctl change_password
      {{ rabbitmq_user_name }}
      {{ rabbitmq_user_pass }}
  when: rabbitmq_user_name is defined
  changed_when: false

- name: Configure user
  ansible.builtin.command: >
    rabbitmqctl set_permissions -p
      {{ rabbitmq_vhost }}
      {{ rabbitmq_user_name }}
      '{{ rabbitmq_user_perm_conf }}'
      '{{ rabbitmq_user_perm_write }}'
      '{{ rabbitmq_user_perm_read }}'
  vars:
    _vhost: "{{ rabbitmq_vhost is defined }}"
    _user: "{{ rabbitmq_user_name is defined }}"
  when: _vhost and _user
  changed_when: false

- name: Set user tags
  ansible.builtin.command: >
    rabbitmqctl set_user_tags
      {{ rabbitmq_user_name }}
      {{ rabbitmq_user_tags | join(' ') }}
  vars:
    _defined: "{{ rabbitmq_user_name is defined }}"
    _tags: "{{ rabbitmq_user_tags != [] }}"
  when: _defined and _tags
  changed_when: false
